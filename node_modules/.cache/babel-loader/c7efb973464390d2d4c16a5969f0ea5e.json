{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerze\\\\Desktop\\\\Actualizado\\\\src\\\\context\\\\cartContext.js\",\n    _s = $RefreshSig$();\n\n//Creo el contexto\nimport { createContext, useEffect, useState } from \"react\";\nimport { isCompositeComponent } from \"react-dom/test-utils\"; //lo exporto para saber de cual proviene\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext(); //Se crea como capa de abstraccion y se llaman a los children\n// para poder visualizar la pantalla los componantes.\n\nconst Provider = props => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n  const [suma, setSuma] = useState([0]);\n\n  const totalCart = () => {\n    let suma = 0;\n    cart.forEach(item => suma += item.precio * item.stock);\n    setSuma(suma);\n  }; //Escucha los cambios del carrito si suma o no\n\n\n  useEffect(() => {\n    console.log(cart);\n    totalCart();\n  }, [cart]);\n\n  const addToCart = (item, cantidad) => {\n    //utilizo spread operator para agregar todo \"junto\"\n    // console.log({...item,cantidad}\n    // console.log('agregando al carrito')\n    if (isInCart(item.id)) {\n      alert('Ya esta en el carrito');\n    } else {\n      setCart([...cart, { ...item,\n        cantidad\n      }]);\n    }\n  }; //funcion que busca si el item esta en el carrito\n  ////saber si esta o no, devuelve un true or false la funcion\n\n\n  const isInCart = id => {\n    return cart.some(prod => prod.id === id);\n  }; //Funcion que trae los articulos distintos al \n\n\n  const deleteOne = id => {\n    const articulos = cart.filter(prod => prod.id !== id);\n    setCart(articulos);\n  };\n\n  const deleteAll = () => {\n    setCart([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      deleteOne,\n      deleteAll\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Provider, \"983NYBgrOCmaWycmO4jbu1gBVsE=\");\n\n_c = Provider;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["createContext","useEffect","useState","isCompositeComponent","CartContext","Provider","props","cart","setCart","suma","setSuma","totalCart","forEach","item","precio","stock","console","log","addToCart","cantidad","isInCart","id","alert","some","prod","deleteOne","articulos","filter","deleteAll","children"],"sources":["C:/Users/gerze/Desktop/Actualizado/src/context/cartContext.js"],"sourcesContent":["//Creo el contexto\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport { isCompositeComponent } from \"react-dom/test-utils\";\r\n\r\n//lo exporto para saber de cual proviene\r\nexport const CartContext = createContext();\r\n\r\n//Se crea como capa de abstraccion y se llaman a los children\r\n// para poder visualizar la pantalla los componantes.\r\nconst Provider = (props)=>{\r\n    const [cart, setCart] = useState([])\r\n    const [suma,setSuma] = useState([0])\r\n\r\n\r\n    const totalCart = () =>\r\n    {\r\n        let suma = 0;\r\n\r\n        cart.forEach(item => suma += (item.precio * item.stock))\r\n        setSuma(suma)\r\n    \r\n    }\r\n\r\n\r\n    //Escucha los cambios del carrito si suma o no\r\n    useEffect(()=>{\r\n        console.log(cart)\r\n        totalCart()\r\n    },[cart])\r\n\r\n\r\n    const addToCart = (item,cantidad) =>\r\n    {   //utilizo spread operator para agregar todo \"junto\"\r\n        // console.log({...item,cantidad}\r\n        // console.log('agregando al carrito')\r\n        \r\n        if(isInCart(item.id))\r\n        {\r\n            alert('Ya esta en el carrito')\r\n        }\r\n        else{  setCart([...cart,{...item,cantidad}])}\r\n      \r\n    }\r\n\r\n    //funcion que busca si el item esta en el carrito\r\n    ////saber si esta o no, devuelve un true or false la funcion\r\n    const isInCart = (id) =>\r\n    {\r\n            \r\n      return cart.some((prod) => prod.id === id)\r\n    }\r\n\r\n    //Funcion que trae los articulos distintos al \r\n    const deleteOne = (id) =>\r\n    {\r\n        const articulos = cart.filter((prod)=> prod.id !== id);\r\n        setCart(articulos);\r\n    }\r\n    const deleteAll = () =>\r\n    {\r\n        setCart([])\r\n    }\r\n\r\n   return(\r\n     <CartContext.Provider value={{cart,addToCart,deleteOne,deleteAll}}>\r\n        {props.children}\r\n     </CartContext.Provider>\r\n    )\r\n}\r\nexport default Provider;\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,oBAAT,QAAqC,sBAArC,C,CAEA;;;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC,C,CAEP;AACA;;AACA,MAAMK,QAAQ,GAAIC,KAAD,IAAS;EAAA;;EACtB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACO,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,CAAC,CAAD,CAAD,CAA/B;;EAGA,MAAMS,SAAS,GAAG,MAClB;IACI,IAAIF,IAAI,GAAG,CAAX;IAEAF,IAAI,CAACK,OAAL,CAAaC,IAAI,IAAIJ,IAAI,IAAKI,IAAI,CAACC,MAAL,GAAcD,IAAI,CAACE,KAAjD;IACAL,OAAO,CAACD,IAAD,CAAP;EAEH,CAPD,CALsB,CAetB;;;EACAR,SAAS,CAAC,MAAI;IACVe,OAAO,CAACC,GAAR,CAAYV,IAAZ;IACAI,SAAS;EACZ,CAHQ,EAGP,CAACJ,IAAD,CAHO,CAAT;;EAMA,MAAMW,SAAS,GAAG,CAACL,IAAD,EAAMM,QAAN,KAClB;IAAI;IACA;IACA;IAEA,IAAGC,QAAQ,CAACP,IAAI,CAACQ,EAAN,CAAX,EACA;MACIC,KAAK,CAAC,uBAAD,CAAL;IACH,CAHD,MAII;MAAGd,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAS,EAAC,GAAGM,IAAJ;QAASM;MAAT,CAAT,CAAD,CAAP;IAAsC;EAEhD,CAXD,CAtBsB,CAmCtB;EACA;;;EACA,MAAMC,QAAQ,GAAIC,EAAD,IACjB;IAEE,OAAOd,IAAI,CAACgB,IAAL,CAAWC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAhC,CAAP;EACD,CAJD,CArCsB,CA2CtB;;;EACA,MAAMI,SAAS,GAAIJ,EAAD,IAClB;IACI,MAAMK,SAAS,GAAGnB,IAAI,CAACoB,MAAL,CAAaH,IAAD,IAASA,IAAI,CAACH,EAAL,KAAYA,EAAjC,CAAlB;IACAb,OAAO,CAACkB,SAAD,CAAP;EACH,CAJD;;EAKA,MAAME,SAAS,GAAG,MAClB;IACIpB,OAAO,CAAC,EAAD,CAAP;EACH,CAHD;;EAKD,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAACD,IAAD;MAAMW,SAAN;MAAgBO,SAAhB;MAA0BG;IAA1B,CAA7B;IAAA,UACItB,KAAK,CAACuB;EADV;IAAA;IAAA;IAAA;EAAA,QADF;AAKF,CA3DD;;GAAMxB,Q;;KAAAA,Q;AA4DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}